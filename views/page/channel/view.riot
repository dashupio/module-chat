<page-channel-view>
  <div>
    <a href="#!" class="d-block alert alert-info mb-3" if={ !props.page.get('data.model') } onclick={ (e) => props.onConfig(e) }>
      <i class="fa fa-exclamation-triangle mr-2" />
      Please select at least one <b>model</b> for the messages.
    </a>

    <div if={ loading('channel') } class="text-center my-5 py-5">
      <i class="fa fa-spin fa-spinner h1" />
    </div>
    <div if={ !loading('channel') && props.page.get('data.form') } class="dashup-grid">
      SUP
    </div>
  </div>

  <script>
    // export default
    export default class PageChatView {

      /**
       * on before mount
       */
      onBeforeMount(...args) {
        // check frontend
        if (typeof window === 'undefined') return;

        // safe update
        this.safeUpdate = () => {
          this.update();
        };

        // listeners
        this.props.page.on('reload', this.safeUpdate);
        this.props.page.on('data.form', this.safeUpdate);
      }

      /**
       * on before mount
       */
      onBeforeUnmount(...args) {
        // check frontend
        if (typeof window === 'undefined') return;

        // listeners
        this.props.page.removeListener('reload', this.safeUpdate);
        this.props.page.removeListener('data.form', this.safeUpdate);
      }

      /**
       * get props
       */
      getProps() {
        // clone
        const newProps = { ...(this.props) };

        // delete
        delete newProps.type;
        delete newProps.view;
        delete newProps.class;
        delete newProps.struct;

        // return
        return newProps;
      }

      /**
       * ref
       */
      ref(name) {
        // set refs
        if (!this.refs) this.refs = {};

        // return ref function
        return (that) => {
          // set ref
          this.refs[name] = that;
        };
      }

      /**
       * set loading
       */
      loading(type, way) {
        // set loading
        if (!this.__loading) this.__loading = new Map();

        // check loading
        if (!type) return !!Array.from(this.__loading.values()).find((v) => v);
        if (typeof way === 'undefined') return !!this.__loading.get(type);

        // set loading
        this.__loading.set(type, way);
        this.update();
      }
    }
  </script>
</page-channel-view>